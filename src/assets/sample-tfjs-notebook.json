[
  {
   "type": "COMMENT",
   "content": "Define a model for linear regression:",
   "consoleOutput": [],
   "output": null,
   "consoleExpanded": true,
   "editorExpanded": true,
   "closed": true
  },
  {
   "type": "CODE",
   "content": "const model = tf.sequential();\nmodel.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\nmodel.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\nmodel",
   "consoleOutput": [
    {
     "severity": "LOG",
     "content": "[object Object]\n"
    }
   ],
   "output": null,
   "consoleExpanded": false,
   "editorExpanded": true
  },
  {
   "type": "COMMENT",
   "content": "Generate some synthetic data for training:",
   "consoleOutput": [],
   "output": null,
   "consoleExpanded": true,
   "editorExpanded": true,
   "closed": true
  },
  {
   "type": "CODE",
   "content": "const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);\nconst xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);\n\n[ys, xs, prev] // prev => model",
   "consoleOutput": [
    {
     "severity": "LOG",
     "content": "Tensor\n    [[1],\n     [3],\n     [5],\n     [7]],Tensor\n    [[1],\n     [2],\n     [3],\n     [4]],[object Object]\n"
    }
   ],
   "output": null,
   "consoleExpanded": false,
   "editorExpanded": true
  },
  {
   "type": "COMMENT",
   "content": "Train the model using the data and predict:",
   "consoleOutput": [],
   "output": null,
   "consoleExpanded": true,
   "editorExpanded": true,
   "closed": true
  },
  {
   "type": "CODE",
   "content": "var [ys, xs, model] = prev\n\nmodel.fit(xs, ys, {epochs: 10}).then(function() {\n  return model.predict(tf.tensor2d([5], [1, 1]));\n});",
   "consoleOutput": [
    {
     "severity": "LOG",
     "content": "Tensor\n     [[8.096961],]\n"
    }
   ],
   "output": null,
   "consoleExpanded": true,
   "editorExpanded": true
  }
 ]
